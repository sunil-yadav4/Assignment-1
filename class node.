
    def _init_(self,element,prev=None,next=None):
        self._element=element
        self._prev = prev
        self._next = next

class DoublyLinkedList:
    
    def init(self):
        self._head = None
        self._tail = None
        self._head._next=self._tail
        self._tail._prev=self._head
        self._size = 0
        
    def _len_(self):
        return self._size
    def is_empty(self):
        return self._size == 0
    def display(self):
        first = self._head
        while first:
            print(first._element,end='-->')
            first = first._next
        print()
    
    
    def add_head(self,e):
        temp= Node(e)
        self._head=temp
        self._head._next=temp
        self._size += 1
    
    def add_tail(self,e):
        temp = Node(e)
        if self.is_empty():
            self._head=temp
            self._tail=temp
        else:
            self._tail._next = temp
            temp._prev=self._tail
        self._tail=temp
        self._size += 1
    
    def remove_head(self):
        if self.is_empty():
            print("List is empty")
        value = self._head._element
        self._head = self._head._next
        self._head._prev = None
        self._size -= 1
        if self.is_empty():
            self._tail = None
        return value
    
    def remove_tail(self):
        if self.is_empty():
            print("List is empty")
        temp = self._head
        self._tail = temp
        temp = temp._next
        value = temp._element
        self._tail._next = None
        self._size -= 1
        return value
